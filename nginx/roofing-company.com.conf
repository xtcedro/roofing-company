# Default server configuration
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    location / {
        proxy_pass http://127.0.0.1:3000; # Replace 3000 with your Node.js server's port
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # CORS Headers
        add_header Access-Control-Allow-Origin https://www.heavenlyroofingok.com;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        add_header Access-Control-Allow-Credentials "true";

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin https://www.heavenlyroofingok.com;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Allow-Credentials "true";
            return 204;
        }
    }

    # Additional static file serving (optional)
    location /static/ {
        root /var/www/html;
    }

    # SSL configuration (if needed)
    # Uncomment the following lines for SSL setup
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    # ssl_certificate /path/to/certificate.pem;
    # ssl_certificate_key /path/to/key.pem;

    # For Let's Encrypt SSL (Certbot)
    # Uncomment and configure if using Let's Encrypt
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Server block for your domain with SSL (optional)
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name www.heavenlyroofingok.com heavenlyroofingok.com;

    ssl_certificate /etc/letsencrypt/live/heavenlyroofingok.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/heavenlyroofingok.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://127.0.0.1:3000; # Replace 3000 with your Node.js server's port
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # CORS Headers
        add_header Access-Control-Allow-Origin https://www.heavenlyroofingok.com;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        add_header Access-Control-Allow-Credentials "true";

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin https://www.heavenlyroofingok.com;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Allow-Credentials "true";
            return 204;
        }
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name www.heavenlyroofingok.com heavenlyroofingok.com;
    return 301 https://$host$request_uri;
}